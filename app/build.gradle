apply plugin: 'com.android.application'
apply plugin: 'de.undercouch.download'

static def gitVersion() {
    def cmd = 'git rev-list HEAD --first-parent --count'
    return cmd.execute().text.trim().toInteger()
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    Properties properties = new Properties()
    InputStream inputStream = rootProject.file('local.properties').newDataInputStream()
    properties.load(inputStream)

    def key_keyAlias = properties.getProperty("keyAlias")
    def key_keyPassword = properties.getProperty("keyPassword")
    def key_keyFile = properties.getProperty("keyFile")
    def key_storePassword = properties.getProperty("storePassword")

    def zego_appid = properties.getProperty("zegoAppid")
    def zego_appsign = properties.getProperty("zegoAppsign")

    defaultConfig {
        applicationId "com.vinson.addev"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode gitVersion()
        versionName "1.0." + gitVersion()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias key_keyAlias
            keyPassword key_keyPassword
            storeFile file(key_keyFile)
            storePassword key_storePassword
        }

        release {
            keyAlias key_keyAlias
            keyPassword key_keyPassword
            storeFile file(key_keyFile)
            storePassword key_storePassword
        }
    }

    buildTypes.each {
        it.buildConfigField 'Long', 'ZegoAppId', zego_appid
        it.buildConfigField 'String', 'ZegoAppSign', zego_appsign
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            zipAlignEnabled false
            applicationIdSuffix '.debug'
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            debuggable true
            jniDebuggable true
            zipAlignEnabled true
            applicationIdSuffix '.release'
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            if (outputFileName != null && outputFileName.endsWith('.apk')) {
                if (variant.buildType.name == 'release') {
                    outputFileName = "addev_" + versionName + ".apk"
                } else if (variant.buildType.name == 'debug') {
                    outputFileName = "addev_" + versionName + "_debug.apk"
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    aaptOptions {
        noCompress "tflite"
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/NOTICE.markdown'
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
//apply from: "download_model.gradle"

apply from:'download_model.gradle'


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'

    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation "com.mikepenz:iconics-core:3.2.1"
    implementation 'com.mikepenz:community-material-typeface:2.7.94.1@aar'

    implementation 'im.zego:express-video:1.12.0' // video/audio talk
    implementation 'com.github.licheedev:Android-SerialPort-API:2.0.0' // 串口通信
    implementation "com.github.nisrulz:easydeviceinfo-base:2.4.1"   // 传感器
    implementation 'com.github.nisrulz:sensey:1.0.1'    // sensor event

    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0' // logcat
    implementation 'com.xdandroid:hellodaemon:1.2.2' // daemon service

    implementation 'com.github.javafaker:javafaker:1.0.2' // fake data

    implementation('org.tensorflow:tensorflow-lite:2.3.0') { changing = true }

    implementation 'com.otaliastudios:cameraview:2.6.3' // camera library

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}